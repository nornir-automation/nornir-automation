<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nornir on nornir.tech</title>
    <link>/tags/nornir/</link>
    <description>Recent content in nornir on nornir.tech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Nornir</copyright>
    <lastBuildDate>Mon, 18 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/nornir/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Nornir 3 beta</title>
      <link>/2020/05/18/nornir-3-beta/</link>
      <pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/05/18/nornir-3-beta/</guid>
      <description>I am happy to announce that nornir3 is in beta for you to test. The truth is that it&amp;rsquo;s been out already for a while but at this point I am confident it&amp;rsquo;s stable enough to open it to the wider public for testing.
To install nornir beta you will need to execute the following command:
$ pip install --pre &amp;#34;nornir&amp;gt;=3.0.0b0&amp;#34; Don&amp;rsquo;t forget the --pre option as otherwise pip won&amp;rsquo;t let you install it as it&amp;rsquo;s considered a pre-release.</description>
    </item>
    
    <item>
      <title>Tutorial: Combining Nornir with pyATS</title>
      <link>/2020/05/13/tutorial-combining-nornir-with-pyats/</link>
      <pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/05/13/tutorial-combining-nornir-with-pyats/</guid>
      <description>This is a guest post by John McGovern (IPvZero), for more content like this and other interesting stuff you can visit the following youtube channel, github account, and twitter feed.
 This tutorial aims to provide a simple use-case for combining Nornir and pyATS together in order to profile your current network configurations and implement desired state - as specified in host variable definition files.
The workflow we will follow in this tutorial will be first to:</description>
    </item>
    
    <item>
      <title>how many threads are enough threads?</title>
      <link>/2020/05/01/how-many-threads-are-enough-threads/</link>
      <pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/05/01/how-many-threads-are-enough-threads/</guid>
      <description>The other night there was a discussion about python multi-threading on the nornir channel on slack so I decided to do some benchmarks and explain a couple of things. I am by no means an expert on the topic, I mostly know enough to be scared about the topic and to test assumptions to avoid surprises. I am also going to try to simplify things a bit so apologies in advanced if something is slightly inaccurate.</description>
    </item>
    
    <item>
      <title>CNaaS-NMS</title>
      <link>/2020/03/03/cnaas-nms/</link>
      <pubDate>Tue, 03 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/03/03/cnaas-nms/</guid>
      <description>Github Docs
Campus Network-as-a-Service - Network Management System. Software to automate management of a campus network (LAN). This is an open source software developed as part of SUNETs managed service.
Planned features:
 Zero-touch provisioning of switches Automation of common changes for campus LAN Automated procedure for firmware upgrades Multi-vendor support  </description>
    </item>
    
    <item>
      <title>Stockpiler</title>
      <link>/2020/03/03/stockpiler/</link>
      <pubDate>Tue, 03 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/03/03/stockpiler/</guid>
      <description>Gtihub
Stockpiler gathers network device configurations and stores them in a local Git repository.
Stockpiler utilizes Nornir, Netmiko, and GitPython for a fully self-contained backup solution, and has been tested to function on Linux, MacOS, and Windows.</description>
    </item>
    
  </channel>
</rss>